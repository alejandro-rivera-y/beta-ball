{"version":3,"sources":["../../client/desktop-app.js"],"names":[],"mappings":";;;;;;;;AAMA,OAAO,EAAP,CAAU,gBAAV,EAA4B,UAAC,IAAD,EAAU;AACpC,YAAU,IAAV;AACA,YAAU,SAAV,GAAsB,KAAK,GAA3B;AACD,CAHD;;AAKA,OAAO,EAAP,CAAU,QAAV,EAAoB,sBAAc;AAChC,MAAI,OAAJ,EAAa;AACX,cAAU,WAAW,EAArB,IAA2B,IAAI,QAAJ,CAAa,UAAb,CAA3B;AACD;AACF,CAJD;;AAMA,OAAO,EAAP,CAAU,cAAV,EAA0B,gBAAQ;AAChC,MAAI,OAAJ,EAAa;AACX,cAAU,KAAK,EAAf,EAAmB,IAAnB,GAA0B,KAAK,IAA/B;AACA,cAAU,KAAK,EAAf,EAAmB,KAAnB,GAA2B,KAAK,KAAhC;AACD;AACF,CALD;;AAOA,OAAO,EAAP,CAAU,cAAV,EAA0B,gBAAQ;AAChC,MAAI,KAAK,OAAL,IAAgB,OAApB,EAA6B;AAC3B,uBAAmB,IAAnB;AACD;AACF,CAJD;;AAOA,OAAO,EAAP,CAAU,OAAV,EAAmB,iBAAS;AAC1B,MAAI,OAAJ,EAAa;AACX,QAAI,QAAQ,CAAZ;AACA,cAAU,SAAV,CAAoB,GAApB,CAAwB,QAAxB;AACA,mBAAe,KAAf,CAAqB,OAArB,GAA+B,GAA/B;AACA,oBAAgB,KAAhB;AACA,eAAW,KAAX,EAAkB,IAAlB;AACD;AACF,CARD;;AAUA,OAAO,EAAP,CAAU,OAAV,EAAmB,qBAAa;AAC9B,MAAI,OAAJ,EAAa;AACX,QAAI,SAAJ,CAAc,SAAd,EAAyB,QAAzB,GAAoC,IAAI,SAAJ,CAAc,SAAd,EAAyB,QAAzB,GAAoC,CAApC,IAAyC,CAA7E;AACD;AACF,CAJD;;AAMA,OAAO,EAAP,CAAU,eAAV,EAA2B,kBAAU;AACnC,MAAI,OAAJ,EAAa;AACX,iBAAa,MAAb;AACA,kBAAc,SAAd,CAAwB,GAAxB,CAA4B,QAA5B;AACA,gBAAY,EAAZ;AACA,UAAM,EAAN;AACD;AACF,CAPD;;AASA,OAAO,EAAP,CAAU,WAAV,EAAuB,gBAAQ;AAC7B,MAAI,OAAJ,EAAa;AACX,WAAO,UAAU,IAAV,CAAP;AACD;AACF,CAJD;;AAMA,SAAS,KAAT,GAAiB;AACf,gBAAc,SAAd,CAAwB,MAAxB,CAA+B,QAA/B;AACA,QAAM,IAAI,UAAJ,CAAe;AACnB,YAAQ,MADW;AAEnB,cAAU,IAFS;AAGnB,eAAW;AAHQ,GAAf,CAAN;AAKA,MAAI,IAAJ,CAAS,kBAAU;AACjB,WAAO,IAAP,CAAY,QAAZ,EAAsB,MAAtB;AACD,GAFD;AAGD;;AAED,SAAS,eAAT,CAAyB,KAAzB,EAAgC;AAC9B,MAAI,QAAQ,YAAY,YAAM;AAC5B,mBAAe,SAAf,GAA2B,KAA3B;AACA,QAAI,UAAU,CAAd,EAAiB;AACf,qBAAe,KAAf,CAAqB,OAArB,GAA+B,GAA/B;AACA,oBAAc,KAAd;AACD;AACD;AACD,GAPW,EAOT,IAPS,CAAZ;AAQD","file":"desktop-app.js","sourcesContent":["/**\n * @file\n * @author Alejandro Rivera <seeealejandro@gmail.com>\n * {@link https://github.com/alejandro-rivera-y/beta-ball GitHub}\n */\n\nsocket.on('identification', (data) => {\n  desktop = true;\n  contenido.innerHTML = data.url\n});\n\nsocket.on('joined', userJoined => {\n  if (desktop) {\n    betaBalls[userJoined.id] = new BetaBall(userJoined);\n  }\n});\n\nsocket.on('basicOptions', data => {\n  if (desktop) {\n    betaBalls[data.id].name = data.name;\n    betaBalls[data.id].color = data.color\n  }\n});\n\nsocket.on('notification', data => {\n  if (data.desktop && desktop) {\n    renderNotification(data)\n  }\n});\n\n\nsocket.on('start', users => {\n  if (desktop) {\n    let count = 3;\n    contenido.classList.add('hidden');\n    timerContainer.style.opacity = '1';\n    conteoRegresivo(count);\n    setTimeout(start, 4500)\n  }\n});\n\nsocket.on('moved', userMoved => {\n  if (desktop) {\n    map.betaBalls[userMoved].strength = map.betaBalls[userMoved].strength + 1 || 0\n  }\n});\n\nsocket.on('screen winner', winner => {\n  if (desktop) {\n    winnerWindow(winner)\n    ballContainer.classList.add('hidden');\n    betaBalls = {};\n    map = {};\n  }\n});\n\nsocket.on('user left', user => {\n  if (desktop) {\n    delete betaBalls[user];\n  }\n});\n\nfunction start() {\n  ballContainer.classList.remove('hidden');\n  map = new Enviroment({\n    canvas: canvas,\n    friction: 0.06,\n    betaBalls: betaBalls\n  });\n  map.draw(winner => {\n    socket.emit('winner', winner)\n  })\n}\n\nfunction conteoRegresivo(count) {\n  let timer = setInterval(() => {\n    timerContainer.innerHTML = count;\n    if (count === 0) {\n      timerContainer.style.opacity = '0';\n      clearInterval(timer)\n    }\n    count--\n  }, 1000);\n}\n"]}