{"version":3,"sources":["../../client/enviroment.js"],"names":[],"mappings":";;;;;;AAMA;;;;;;;;AAEA,IAAM,OAAO,GAAb;AACA,IAAM,cAAc,GAApB;AACA,IAAM,UAAU,IAAI,KAAK,EAAzB;AACA,IAAM,SAAS,IAAI,KAAK,EAAxB;;IAEM,U;AAEJ,4BAA2I;AAAA,QAA9H,MAA8H,QAA9H,MAA8H;AAAA,4BAAtH,OAAsH;AAAA,QAAtH,OAAsH,gCAA5G,GAA4G;AAAA,6BAAvG,QAAuG;AAAA,QAAvG,QAAuG,iCAA5F,GAA4F;AAAA,+BAAvF,UAAuF;AAAA,QAAvF,UAAuF,mCAA1E,EAA0E;AAAA,oCAAtE,eAAsE;AAAA,QAAtE,eAAsE,wCAApD,SAAoD;AAAA,gCAAzC,WAAyC;AAAA,QAAzC,WAAyC,oCAA3B,SAA2B;;AAAA,uCAAhB,SAAgB;;AAAA;;AACzI,QAAI,CAAC,MAAL,EAAa;AACX,YAAM,IAAI,KAAJ,CAAU,qCAAV,CAAN;AACD;AACD,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,cAAL,GAAsB,eAAtB;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,QAAL;AACA,SAAK,IAAL,GAAY,KAAZ;AACA,SAAK,iBAAL;AACD;;;;yBAEI,c,EAAgB;AACnB,UAAI,CAAC,KAAK,IAAV,EAAgB;AACd,aAAK,IAAI,KAAT,IAAkB,KAAK,SAAvB,EAAkC;AAChC,cAAI,KAAK,SAAL,CAAe,cAAf,CAA8B,KAA9B,CAAJ,EAA0C;AACxC,iBAAK,SAAL,CAAe,KAAf,EAAsB,CAAtB,GAA0B,KAAK,KAAL,GAAa,GAAvC;AACA,iBAAK,SAAL,CAAe,KAAf,EAAsB,CAAtB,GAA0B,KAAK,MAAL,GAAc,GAAxC;AACA,iBAAK,SAAL,CAAe,KAAf,EAAsB,MAAtB,GAA+B,KAAK,KAAL,GAAa,IAA5C;AACA,iBAAK,SAAL,CAAe,KAAf,EAAsB,MAAtB,GAA+B,KAAK,SAAL,CAAe,KAAf,EAAsB,MAAtB,GAA+B,CAA9D;AACD;AACF;AACD,aAAK,cAAL,GAAsB,cAAtB;AACA,aAAK,IAAL,GAAY,IAAZ;AACD;AACD,WAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,cAA9B;AACA,WAAK,OAAL,CAAa,QAAb,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,KAAK,KAAjC,EAAwC,KAAK,MAA7C;;AAEA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,KAAzB,EAAgC,KAAK,KAAK,KAAL,GAAa,WAAlD,EAA+D;AAC7D,aAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,WAA9B;AACA,aAAK,OAAL,CAAa,QAAb,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,KAAK,UAAjC,EAA6C,KAAK,MAAlD;AACD;;AAED,WAAK,IAAI,KAAI,CAAb,EAAgB,KAAI,KAAK,MAAzB,EAAiC,MAAK,KAAK,MAAL,GAAc,WAApD,EAAiE;AAC/D,aAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,WAA9B;AACA,aAAK,OAAL,CAAa,QAAb,CAAsB,CAAtB,EAAyB,EAAzB,EAA4B,KAAK,KAAjC,EAAwC,KAAK,UAA7C;AACD;;AAED,WAAK,IAAI,QAAT,IAAqB,KAAK,SAA1B,EAAqC;AACnC,YAAI,KAAK,SAAL,CAAe,cAAf,CAA8B,QAA9B,CAAJ,EAA6C;AAC3C,eAAK,OAAL,CAAa,SAAb;AACA,eAAK,OAAL,CAAa,GAAb,CAAiB,KAAK,SAAL,CAAe,QAAf,EAAyB,CAA1C,EAA6C,KAAK,SAAL,CAAe,QAAf,EAAyB,CAAtE,EAAyE,KAAK,SAAL,CAAe,QAAf,EAAyB,MAAlG,EAA0G,OAA1G,EAAmH,MAAnH;AACA,eAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,SAAL,CAAe,QAAf,EAAyB,KAAlD;AACA,eAAK,OAAL,CAAa,IAAb;AACA,eAAK,OAAL,CAAa,WAAb,GAA2B,KAAK,SAAL,CAAe,QAAf,EAAyB,KAApD;AACA,eAAK,OAAL,CAAa,MAAb;AACA,eAAK,SAAL,CAAe,QAAf,EAAyB,IAAzB,CAA8B,EAAC,UAAU,KAAK,QAAhB,EAA0B,SAAS,KAAK,OAAxC,EAA9B;AACA,cAAI,KAAK,SAAL,CAAe,QAAf,EAAyB,CAAzB,GAA6B,KAAK,KAAtC,EAA6C;AAC3C,mBAAO,oBAAP,CAA4B,KAAK,SAAjC;AACA,iBAAK,MAAL,GAAc,QAAd;AACA,iBAAK,cAAL,CAAoB,KAAK,MAAzB;AACD;AACF;AACF;AACD,UAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,aAAK,SAAL,GAAiB,OAAO,qBAAP,CAA6B,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAA7B,CAAjB;AACD;AACF;;;+BAEU;AACT,WAAK,MAAL,GAAc,OAAO,WAAP,GAAqB,GAAnC;AACA,WAAK,KAAL,GAAa,OAAO,UAAP,GAAoB,GAAjC;AACA,WAAK,KAAL,GAAa,KAAK,MAAL,GAAc,WAA3B;AACA,WAAK,MAAL,CAAY,MAAZ,GAAqB,KAAK,MAA1B;AACA,WAAK,MAAL,CAAY,KAAZ,GAAoB,KAAK,KAAzB;AACA,WAAK,OAAL,GAAe,KAAK,MAAL,CAAY,UAAZ,CAAuB,IAAvB,CAAf;AACD;;;wCAEmB;AAClB,WAAK,OAAL,CAAa,SAAb,CAAuB,CAAvB,EAA0B,KAAK,MAA/B;AACA,WAAK,OAAL,CAAa,KAAb,CAAmB,CAAnB,EAAsB,CAAC,CAAvB;AACD","file":"enviroment.js","sourcesContent":["/**\n * @file\n * @author Alejandro Rivera <seeealejandro@gmail.com>\n * {@link https://github.com/alejandro-rivera-y/beta-ball GitHub}\n */\n\n\"use strict\"\n\nconst HALF = 0.5\nconst TEN_PERCENT = 0.1\nconst ZERO_PI = 0 * Math.PI\nconst TWO_PI = 2 * Math.PI\n\nclass Enviroment {\n\n  constructor({canvas, gravity = 9.8, friction = 0.3, borderSize = .3, backgroundColor = '#080300', borderColor = '#005453', betaBalls: []}) {\n    if (!canvas) {\n      throw new Error('Debe especificarce un objeto canvas')\n    }\n    this.canvas = canvas\n    this.gravity = gravity\n    this.friction = friction\n    this.borderSize = borderSize\n    this.backgrounColor = backgroundColor\n    this.borderColor = borderColor\n    this.betaBalls = betaBalls\n    this.resizing()\n    this.init = false\n    this._toCartesianPlane()\n  }\n\n  draw(winnerFunction) {\n    if (!this.init) {\n      for (let index in this.betaBalls) {\n        if (this.betaBalls.hasOwnProperty(index)) {\n          this.betaBalls[index].X = this.width * 0.1\n          this.betaBalls[index].Y = this.height * 0.1\n          this.betaBalls[index].radius = this.width * 0.05\n          this.betaBalls[index].weight = this.betaBalls[index].normal = 1\n        }\n      }\n      this.winnerFunction = winnerFunction\n      this.init = true\n    }\n    this.context.fillStyle = this.backgrounColor\n    this.context.fillRect(0, 0, this.width, this.height)\n\n    for (let k = 0; k < this.width; k += this.width * TEN_PERCENT) {\n      this.context.fillStyle = this.borderColor\n      this.context.fillRect(k, 0, this.borderSize, this.height)\n    }\n\n    for (let k = 0; k < this.height; k += this.height * TEN_PERCENT) {\n      this.context.fillStyle = this.borderColor\n      this.context.fillRect(0, k, this.width, this.borderSize)\n    }\n\n    for (let indexDos in this.betaBalls) {\n      if (this.betaBalls.hasOwnProperty(indexDos)) {\n        this.context.beginPath();\n        this.context.arc(this.betaBalls[indexDos].X, this.betaBalls[indexDos].Y, this.betaBalls[indexDos].radius, ZERO_PI, TWO_PI);\n        this.context.fillStyle = this.betaBalls[indexDos].color\n        this.context.fill()\n        this.context.strokeStyle = this.betaBalls[indexDos].color\n        this.context.stroke()\n        this.betaBalls[indexDos].move({friction: this.friction, gravity: this.gravity})\n        if (this.betaBalls[indexDos].X > this.width) {\n          window.cancelAnimationFrame(this.animation)\n          this.winner = indexDos\n          this.winnerFunction(this.winner)\n        }\n      }\n    }\n    if (!this.winner) {\n      this.animation = window.requestAnimationFrame(this.draw.bind(this))\n    }\n  }\n\n  resizing() {\n    this.height = window.innerHeight * .95\n    this.width = window.innerWidth * .95\n    this.floor = this.height * TEN_PERCENT\n    this.canvas.height = this.height\n    this.canvas.width = this.width\n    this.context = this.canvas.getContext('2d')\n  }\n\n  _toCartesianPlane() {\n    this.context.translate(0, this.height)\n    this.context.scale(1, -1)\n  }\n\n}"]}