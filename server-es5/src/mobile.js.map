{"version":3,"sources":["../../server/src/mobile.js"],"names":[],"mappings":";;;;;;;;AAMA,IAAI,SAAS;;;AAGX,SAAO,EAHI;;;;;;;;AAWX,gBAXW,0BAWI,EAXJ,EAWQ,MAXR,EAWgB,QAXhB,EAWyB;AAClC,WAAO,KAAP,CAAa,OAAO,MAAP,CAAc,EAA3B,IAAiC;AAC/B,UAAI,OAAO,MAAP,CAAc,EADa;AAE/B,YAAM,SAAS,IAFgB;AAG/B,aAAO,SAAS;AAHe,KAAjC;AAKA,OAAG,IAAH,CAAQ,cAAR,EAAwB,OAAO,KAAP,CAAa,OAAO,MAAP,CAAc,EAA3B,CAAxB;AACD,GAlBU;;;;;;;;AAyBX,YAzBW,sBAyBA,EAzBA,EAyBI,MAzBJ,EAyBW;AACpB,WAAO,KAAP,CAAa,OAAO,MAAP,CAAc,EAA3B,EAA+B,KAA/B,GAAuC,IAAvC;AACA,QAAI,OAAO,YAAP,EAAJ,EAA2B;AACzB,SAAG,IAAH,CAAQ,OAAR,EAAiB,OAAO,KAAxB;AACD,KAFD,MAEO;AACL,UAAI,OAAO;AACT,YAAI,OAAO,MAAP,CAAc,EADT;AAET,iBAAS,kCAFA;AAGT,cAAM;AAHG,OAAX;AAKA,aAAO,IAAP,CAAY,cAAZ,EAA4B,IAA5B;AACD;AACF,GArCU;;;;;;;AA2CX,cA3CW,0BA2CI;AACb,QAAI,QAAQ,IAAZ;AACA,SAAK,IAAI,IAAT,IAAiB,OAAO,KAAxB,EAA+B;AAC7B,UAAI,OAAO,KAAP,CAAa,cAAb,CAA4B,IAA5B,CAAJ,EAAuC;AACrC,YAAI,CAAC,OAAO,KAAP,CAAa,IAAb,EAAmB,KAAxB,EAA+B;AAC7B,kBAAQ,KAAR;AACA;AACD;AACF;AACF;AACD,WAAO,SAAS,OAAO,IAAP,CAAY,OAAO,KAAnB,EAA0B,MAA1B,GAAmC,CAAnD;AACD,GAtDU;;;;;;AA2DX,WA3DW,uBA2DC;AACV,WAAO,KAAP,GAAe,EAAf;AACD;AA7DU,CAAb;;AAiEA,OAAO,OAAP,GAAiB,MAAjB","file":"mobile.js","sourcesContent":["/**\n * @file\n * @author Alejandro Rivera <seeealejandro@gmail.com>\n * {@link https://github.com/alejandro-rivera-y/beta-ball GitHub}\n */\n\nvar mobile = {\n\n  // Objeto que contiene los usuarios\n  users: {},\n\n  /**\n   * Cuando se agrega un nuevo usuario se genera el evento que hace que el usuario agrege sus caracteristicas\n   * @param io\n   * @param socket\n   * @param betaBall\n   */\n  newUserOptions(io, socket, betaBall){\n    mobile.users[socket.client.id] = {\n      id: socket.client.id,\n      name: betaBall.name,\n      color: betaBall.color\n    };\n    io.emit('basicOptions', mobile.users[socket.client.id])\n  },\n\n  /**\n   * Cuando el usuaio esta listo se notifica en caso de que haga falta algun usuario o se comienza la partida\n   * @param io\n   * @param socket\n   */\n  usersReady(io, socket){\n    mobile.users[socket.client.id].ready = true;\n    if (mobile.couldBeReady()) {\n      io.emit('start', mobile.users)\n    } else {\n      let data = {\n        id: socket.client.id,\n        message: 'Esperando por los otros usuarios',\n        type: 'success'\n      };\n      socket.emit('notification', data)\n    }\n  },\n\n  /**\n   * Determina si todos los usuarios asignados estan listos para jugar\n   * @returns {boolean}\n   */\n  couldBeReady() {\n    let ready = true;\n    for (let user in mobile.users) {\n      if (mobile.users.hasOwnProperty(user)) {\n        if (!mobile.users[user].ready) {\n          ready = false;\n          break\n        }\n      }\n    }\n    return ready && Object.keys(mobile.users).length > 1\n  },\n\n  /**\n   * Elimina los valores de los usuarios\n   */\n  flushData() {\n    mobile.users = {}\n  }\n\n}\n\nmodule.exports = mobile"]}