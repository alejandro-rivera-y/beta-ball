{"version":3,"sources":["application.js"],"names":[],"mappings":"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","file":"application-compiled.js","sourcesContent":["/**\n * @file Archivo encargado de levantar el servidor e incluir las librerias a usar\n * @author Alejandro Rivera <seeealejandro@gmail.com>\n * {@link https://github.com/alejandro-rivera-y/beta-ball GitHub}\n */\n\n\"use strict\"\n\nimport http from 'http'\nimport express from 'express'\nimport socket from 'socket.io'\nimport userAgent from 'express-useragent'\nimport tinyURL from 'tinyurl'\nimport handlebars from 'express-handlebars'\n\nconst PORT = process.env.ENV || 3000\n\nlet application = express()\nlet server = http.Server(application)\nlet io = socket(server)\nlet desktop = {}\nlet users = {}\n\napplication.use(express.static('public'))\napplication.engine('handlebars', handlebars());\napplication.set('view engine', 'handlebars');\n\nio.on('connection', socket => {\n\n  let clientDevice = userAgent.parse(socket.client.request.headers['user-agent'])\n\n  if (clientDevice.isDesktop) {\n    desktop = socket.client.id\n    flushData()\n    tinyURL.shorten(`http://192.168.0.3:3000/session/${socket.client.id}`, function (miniUrl) {\n      socket.emit('identification', {url: miniUrl})\n    })\n  }\n\n  socket.on('join', room => {\n    io.emit('joined', {id: socket.client.id})\n  })\n\n  socket.on('newOptions', (betaBall) => {\n    users[socket.client.id] = {\n      id: socket.client.id,\n      name: betaBall.name,\n      color: betaBall.color\n    }\n    io.emit('basicOptions', users[socket.client.id])\n  })\n\n  socket.on('user ready', ready => {\n    users[socket.client.id].ready = ready\n    if (couldBeReady()) {\n      io.emit('start', users)\n    } else {\n      let data = {\n        id: socket.client.id,\n        message: 'Debe existir mas de un jugador en la partida',\n        type: 'danger'\n      }\n      socket.emit('notification', data)\n    }\n  })\n\n  socket.on('user move', user => {\n    io.emit('moved', socket.client.id)\n    if (users[socket.client.id].finished) {\n      socket.emit('finished', user)\n    }\n  })\n\n  socket.on('winner', winner => {\n    io.emit('screen winner', users[winner])\n  })\n\n  socket.on('restart', () => {\n    flushData()\n  })\n\n  socket.on('error', err => {\n    // TODO Logging todos los errores\n    console.log(err)\n    socket.emit('display error', () => {\n    })\n  })\n\n  socket.on('disconnect', () => {\n    io.emit('user left', socket.client.id)\n    delete users[socket.client.id]\n  })\n\n  function couldBeReady() {\n    let ready = true\n    for (let user in users) {\n      if (users.hasOwnProperty(user)) {\n        if (!users[user].ready) {\n          ready = false\n          break\n        }\n      }\n    }\n    return ready && Object.keys(users).length > 1\n  }\n\n  function flushData() {\n    users = {}\n  }\n\n})\n\napplication.get('/', (req, res) => {\n  res.render('index')\n})\n\napplication.param('id', (request, response, next, session) => {\n  request.sessionSocket = session\n  next()\n})\n\napplication.get('/session/:id', (request, response, next) => {\n  response.render('index', {sessionSocket: request.sessionSocket})\n})\n\napplication.get('/motion', (request, response, next) => {\n  response.render('motion')\n})\n\nserver.listen(PORT, () => {\n  console.log('Escuchando en ' + PORT)\n})"]}